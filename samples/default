#insist on ssl unless acme challenge
server {
  server_name test123.eu.ngrok.io;
  listen 8080;

  include /etc/nginx/letsencrypt.conf;

  location / {
    return 301 https://test123.eu.ngrok.io$request_uri;
  }
}

server {
  listen 4433 http2 ssl default_server;

  server_name test123.eu.ngrok.io;

  access_log /dev/stdout;
  error_log /dev/stdout;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/test123.eu.ngrok.io/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/test123.eu.ngrok.io/privkey.pem;
  ssl_dhparam /etc/ssl/dh/dh_params.pem;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ecdh_curve secp384r1;

  # enable session resumption to improve https performance
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 1d;
  ssl_session_tickets off;

  ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA";

  # HSTS - force ssl
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  # no iframing
  add_header Content-Security-Policy "frame-ancestors 'none';";
  add_header x-frame-options "DENY" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;

  # OCSP stapling
  resolver 208.67.222.222 208.67.220.220 208.67.222.220 208.67.220.222;
  resolver_timeout 5s;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/letsencrypt/live/test123.eu.ngrok.io/fullchain.pem;

  # api traffic proxied to api server
  location /api {
    # Docker
    resolver 127.0.0.11 valid=5s;
    set $backend_addr "http://api:4000";

    # nginx handles variable addresses differently to static...
    # it will crach if it cant resolve a staticly defined backend address!!
    proxy_pass $backend_addr;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # the rest goes to frontt end app
  location / {
    resolver 127.0.0.11 valid=5s;
    set $backend_addr "http://gui:8080";
    proxy_pass $backend_addr;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}
